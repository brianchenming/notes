# Bash
The ex command *:g/re/p* (grep) was the way they documented how to "globally"
"print" lines containing a "regular expression" (re). 

*:... g* is a prefix for "globally" applying a subsequent command to all lines
which match a pattern (regular expression) while *:... v* applies such a command
too all lines which do NOT match the given pattern ("v" from "conVerse").

Get machine type: arch; uname -a

Subshell hack:

    $ cmd0 | ( cmd1;cmd2;cmd3) | cmd4
    $ echo -e "Beijing Shanghai\n HongKong Chongqing" | ( while read wa wb; do echo "$wa to $wb"; done )
    Beijing to Shanghai
    HongKong to Chongqing

script and scriptreplay: record terminal sessions.

    $ script -t 2> timing.log -a output.session
    type commands;
    ...
    ...
    exit
    $ scriptreplay timing.log output.session

Bash process password

    #!/bin/sh
    #Filename: password.sh
    echo -e "Enter password: "
    stty -echo
    read password
    stty echo
    echo
    echo Password read.

Bash arrays

    $ array_var=(1 2 3 4 5 6)
    $ echo ${array_var[0]}
    $ echo ${array_var[*]}

    $ declare -A ass_array
    $ ass_array=([index1]=val1 [index2]=val2)

    $ declare -A fruits_value
    $ fruits_value=([apple]='100dollars' [orange]='150 dollars')
    $ echo "Apple costs ${fruits_value[apple]}"
    Apple costs 100 dollars

    $ declare -a MYRA
    $ MYRA=($(ls -ld DIR))

find: 

    $ find . \( -name "*.txt" -o -name "*.pdf" \) -print
    ./text.pdf
    ./new.txt
    $ find /home/users -path "*slynux*" -print
    /home/users/list/slynux.txt
    /home/users/slynux/eg.css
    $ find . -iregex ".*\(\.py\|\.sh\)$"
    ./test.py
    ./new.PY
    $ find . ! -name "*.txt" -print
    .
    ./next.jpg
    ./test.py
    ./new.PY
    $ find . -type f -user root -exec chown slynux {} \;
    $ find devel/source_path \( -name ".git" -prune \) -o \( -type f -print \)

xargs:

    $ cat cecho.sh
    #!/bin/bash -
    echo "$@ #"
    $ echo "arg1 arg2 arg3" | xargs -n 2 ./cecho.sh
    arg1 arg2 #
    arg3 #
    $ echo -e "arg1\n arg2\n arg3\n" | xargs -I {} ./cecho.sh -p {} -l
    -p arg1 -l #
    -p arg2 -l #
    -p arg3 -l #

Hence we must use -print0 along with find to produce an output with delimited
character null ('\0') whenever we use the find output as the xargs input.

    $ find . -type f -name "*.txt" -print0 | xargs -0 rm -f
    
*tput* and *stty* are utilities that can be used for terminal manipulations.

    tput sc     store the cursor position
    tput rc     restore cursor position
    tput ed     clear rest of current line

    {1..6} {a..z}
    `#!/bin/bash â€“xv`
    `:(){ :|:& };:`

A function can be exported like environment variables using export export -f fname
While using string comparison, it is best to use double square brackets since use of single
brackets can sometimes lead to errors. `[[ $str1 = $str2 ]]`

# Ubuntu
Ubuntu, hold down the alt key and click and drag anywhere in the window to move
it so that all the buttons are visible

# Thinkpad trackpoint settings:

    # echo "255" > /sys/devices/platform/i8042/serio1/sensitivity 
    # echo "250" > /sys/devices/platform/i8042/serio1/speed

# sgid
The sgid permission for directory means that files created in it the directory
will inherit its group affiliation from the directory, rather than inheriting
it from user.

# inspect hardware

    dmidecode        # get Machine info 
    lsb_release -a   # get Linux distribution info
    hal
    hdparm           # get disks

# make sync clock
> Sometimes when i execute make command, i am getting Clock Skew detected error
> (your build may be incomplete).

This is a classic problem with VMs: it's hard to get an accurate clock when
it's virtual. If this happens, run the following command from time to time:

    /sbin/service ntpd restart

# shutdown server
Use -h option, which requests that the system be either halted or powered off
after it has been brought down, with the  choice  as to which left up to the
system.

    shutdown -h now 
