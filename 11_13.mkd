Bash
====
script and scriptreplay: record terminal sessions.

    $ script -t 2> timing.log -a output.session
    type commands;
    ...
    ...
    exit
    $ scriptreplay timing.log output.session

find: 

    $ find . \( -name "*.txt" -o -name "*.pdf" \) -print
    ./text.pdf
    ./new.txt
    $ find /home/users -path "*slynux*" -print
    /home/users/list/slynux.txt
    /home/users/slynux/eg.css
    $ find . -iregex ".*\(\.py\|\.sh\)$"
    ./test.py
    ./new.PY
    $ find . ! -name "*.txt" -print
    .
    ./next.jpg
    ./test.py
    ./new.PY
    $ find . -type f -user root -exec chown slynux {} \;
    $ find devel/source_path \( -name ".git" -prune \) -o \( -type f -print \)
    `

xargs:

    $ cat cecho.sh
    #!/bin/bash -
    echo "$@ #"
    $ echo "arg1 arg2 arg3" | xargs -n 2 ./cecho.sh
    arg1 arg2 #
    arg3 #
    $ echo -e "arg1\n arg2\n arg3\n" | xargs -I {} ./cecho.sh -p {} -l
    -p arg1 -l #
    -p arg2 -l #
    -p arg3 -l #

Hence we must use -print0 along with find to produce an output with delimited
character null ('\0') whenever we use the find output as the xargs input.

    $ find . -type f -name "*.txt" -print0 | xargs -0 rm -f
    

Subshell hack:

    $ cmd0 | ( cmd1;cmd2;cmd3) | cmd4
    $ echo -e "Beijing Shanghai\n HongKong Chongqing" | ( while read wa wb; do echo "$wa to $wb"; done )
    Beijing to Shanghai
    HongKong to Chongqing


English
====
You could *meander* the archive of scripts for days, and they (usually) work no
matter what OS you run Vim on.


A *missionary* is a person who is sent to a foreign country to teach people about
Christianity. She spoke about her new project with *missionary zeal* (= with
great enthusiasm).


VIM
====
:help :syn-include
guu     : lowercase line
gUU     : uppercase line
ga      : display hex, ascii value of character under cursor
g8      : display hex value of utf-8 character under cursor
:ju(mps) : list of your movements {{help|jump-motions}}
gk      : move up screen line
