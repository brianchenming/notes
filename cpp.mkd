# install boost
http://www.boost.org/doc/libs/1_54_0/more/getting_started/unix-variants.html

	$ bootstrap.sh --prefix=path/to/installation/prefix
	$ ./b2

Download zlib and bzip library; set BZIP2_SOURCE and ZLIB_SOURCE to the folders
as pointed out by
http://www.boost.org/doc/libs/1_54_0/libs/iostreams/doc/installation.html

You will get at the end of a successful installation:

	The Boost C++ Libraries were successfully built!

	The following directory should be added to compiler include paths:

		/home/mchen/software/boost_1_54_0

	The following directory should be added to linker library paths:

	    /home/mchen/software/boost_1_54_0/stage/lib

http://stackoverflow.com/questions/13280823/cmake-not-finding-boost

Debug Boost in CMake:

	-DBoost_DEBUG=ON

# random generator

	std::mt19937 rng;
	rng.seed(std::random_device()());
	std::uniform_int_distribution<int> dist(0, 255)
	dist(rng)

# more STL algorithms
https://www.youtube.com/watch?v=h4Jl1fk3MkQ

	template<typename FwIter, typename Func>
	void adjacent_pair(FwIter first, FwIter last, Func f) {
		if (first != last) {
			FwIter trailer = first;
			++first;
			for (; first != last; ++first, ++trailer) {
				f(*trailer, *first);
			}
		}
	}

	template<typename InIter, typename OutIter, typename Pred>
	std::pair<InIter, OutIter>
	copy_while(InIter first, InIter last, OutIter result, Pred p) {
		for (; first != last && p(*first); ++first)
			*result++ = *first;
		return std::make_pair(first, result);
	}


	// To split a sequence by a value, e.g., tokenize a string.
	template<typename InIter, typename T, typename Func>
	void split(InIter first, InIter last, const T &t, Func f) {
		while (true) {
			InIter found = std::find(first, last, t);
			f(first, found);
			if (found == last)
				break;
			first = ++found;
		}
	}

# undefined symbols during linking due to out-or-order libraries
See https://stackoverflow.com/questions/45135/why-does-the-order-in-which-libraries-are-linked-sometimes-cause-errors-in-gcc

    LDFLAGS += "-Wl,--start-group"



